{
  "id": "guide/model-driven",
  "title": "",
  "contents": "\n<div class=\"content\">\n<h1>Model Driven (Reactive Forms):</h1>\n<p>Multiselect can be rendered using reactive forms also.Just create a simple formControl same as we do for other input types like checkbox, text input, radio etc and attach that formControl with multiselect as follows.</p>\n<code-example language=\"html\">\n&#x3C;ngx-multiselect \n  \tngDefaultCOntrol \n\t[formControl]=\"selectedOption\" \n\t[options]=\"options\">\n&#x3C;/ngx-multiselect>\n</code-example>\n<p>Demo of multiseselct using model driven approach.\nForm control will contain two values which are to be selected by default on rendering.</p>\n<h2>Demo</h2>\n<p><ms-model-driven></ms-model-driven></p>\n<code-tabs>\n  <code-pane title=\"app/model-driven.component.ts\" path=\"model-driven/src/app/model-driven.component.ts\">\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'ms-model-driven',\n  templateUrl: './model-driven.component.html'\n})\nexport class ModelDrivenComponent implements OnInit {\n\n  options;\n  selectedOptions;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.options = [\n      { \"id\": 1, \"name\": \"Manchester United\" },\n      { \"id\": 2, \"name\": \"Liverpool F.C.\" },\n      { \"id\": 3, \"name\": \"Chelsea F.C.\" },\n      { \"id\": 4, \"name\": \"Arsenal F.C.\" }, \n      { \"id\": 5, \"name\": \"FC Barcelona\" }\n    ];\n    this.selectedOptions = new FormControl([\n      { \"id\": 2, \"name\": \"Liverpool F.C.\" },\n      { \"id\": 3, \"name\": \"Chelsea F.C.\" }\n    ]);\n  }\n\n}\n\n\n</code-pane>\n  <code-pane title=\"app/model-driven.component.html\" path=\"model-driven/src/app/model-driven.component.html\">\n&#x3C;p>Select your favourite teams from the following&#x3C;/p>\n&#x3C;ngx-multiselect\n  [formControl]=\"selectedOptions\"\n  ngDefaultControl\n  [options]=\"options\"\n  [multiple]=\"true\">\n&#x3C;/ngx-multiselect>\n\n\n</code-pane>\n</code-tabs>\n<p>We can also use multiselect formControl inside formGroup with any of standard html5 inputs.\nDemo of formGroup froming a group of text input type and multislect in which submit button will be disbaled by default and enabled only on required validation satisfacation.</p>\n<p>Just by specifying formControl to the multiselect, it allows us all features to be used out of the box same as any other input types because it implements .\n// Show the gif showing console.log(this.selectedOption) which will show properties for that variable.\nFor example (Demo Shown below):-\nWe can get its value using value variable\nWe can set the value dynamically using setValue or patchValue\nWe can also subscribe to formControl using valueChanges</p>\n<p>A demo showing all three examples which are written above..</p>\n\n</div>\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n-->"
}