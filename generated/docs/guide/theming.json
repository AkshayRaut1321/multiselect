{
  "id": "guide/theming",
  "title": "",
  "contents": "\n<div class=\"content\">\n<h1>Theming</h1>\n<p>Customize the theme of dropdown is one of the common usecase that we observed. Multiselect currently supports two themes out of the box. These are<br>\n1. Bootstrap\n2. Material</p>\n<p>You can use <code>theme</code> property binding to pass on theme you want to apply. By default it sets to <code>material</code>, you can pass <code>bootstrap</code> value as well.</p>\n<h1>Demo</h1>\n<p><ms-theme></ms-theme></p>\n<code-tabs>\n  <code-pane title=\"app/theming.component.ts\" path=\"theming/src/app/theming.component.ts\">\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'ms-theme',\n  templateUrl: './theme.component.html'\n})\nexport class ThemeComponent {\n  selectedCountry = {\n    id: 1,\n    name: 'India'\n  };\n\n  countries = [\n    {\n      id: 1,\n      name: 'Australia'\n    },\n    {\n      id: 2,\n      name: 'Brazil'\n    },\n    {\n      id: 3,\n      name: 'China'\n    },\n    {\n      id: 4,\n      name: 'India'\n    },\n    {\n      id: 5,\n      name: 'Japan'\n    },\n    {\n      id: 6,\n      name: 'USA'\n    }\n  ];\n}\n\n\n</code-pane>\n  <code-pane title=\"app/theming.component.html\" path=\"theming/src/app/theming.component.html\">\n&#x3C;p>Bootstrap theme&#x3C;/p>\n&#x3C;ngx-multiselect\n  [(ngModel)]=\"selectedCountry\"\n  [options]=\"countries\"\n  theme=\"bootstrap\"\n  ngDefaultControl>\n&#x3C;/ngx-multiselect>\n\n&#x3C;p>Material theme&#x3C;/p>\n&#x3C;ngx-multiselect\n  [(ngModel)]=\"selectedCountry\"\n  [options]=\"countries\"\n  theme=\"material\"\n  ngDefaultControl>\n&#x3C;/ngx-multiselect>\n\n\n</code-pane>\n</code-tabs>\n\n</div>\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n-->"
}